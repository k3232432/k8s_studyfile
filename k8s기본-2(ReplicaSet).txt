ReplicaSet
pod를 단독으로 만들면 pod에 어떤 문제(서버가 죽어서 pod가 사라졌을경우)가 발생했을때
pod를 정해진 수만큼 복제하고 관리하는 것이 ReplicaSet임.

ReplicaSet만들기
===============echo-rs.yml=========
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: echo-rs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
      tier: app
  template:
    metadata:
      labels:
        app: echo
        tier: app
    spec:
      containers:
        - name: echo
          image: ghcr.io/subicura/echo:v1
===============================
# ReplicaSet 생성
kubectl apply -f echo-rs.yml
# 리소스 확인
kubectl get po,rs
ReplicaSet과 pod가 같이 생성된 것을 볼 수 있습니다.
[사진 (replicaset-1).png 참조)

ReplicaSet은 label을 체크해서 원하는 수의 pod가 없으면 새로운 pod를 생성함.

정의		설명
spec.selector	label체크조건
spec.replicas	원하는 pod의 개수
spec.template	생성할 pod의 명세

echo-rs.yml파일을 보면 이전 pod설정파일과 동일하다는 것을 알 수 있음.
#생성된 pod의 label확인
kubectl get pod --show-labels
실행하면 설정한 app=echo, tier=app label을 볼 수 있음. 
#임의로 label 제거
kubectl label pod/echo-rs-k96xj app-
label제거시 app의 label이 사라지면서 selector에 정의된 app=echo, tier=app 조건을 만족하는
pod의 갯수가 0이되므로 새로운 pod가 만들어 짐
# app- 를 지정하면 app label을 제거
kubectl label pod/echo-rs-k96xj app=echo
# 다시 Pod 확인
kubectl get pod --show-labels
실행하면 기존에 있던 pod가 있기때문에 1개의 pod만 남음.

ReplicaSet의 동작원리 [(replicaset-2).png파일참조]

1.ReplicaSet Controller는 ReplicaSet조건을 감시하면서 현재 상태와 원하는 상태가 다른 것을 체크
2.ReplicaSet Controller가 원하는 상태가 되도록 Pod을 생성하거나 제거
3.Scheduler는 API서버를 감시하면서 할당되지 않은unassigned Pod이 있는지 체크
4.Scheduler는 할당되지 않은 새로운 Pod을 감지하고 적절한 노드node에 배치
5.이후 노드는 기존대로 동작

ReplicaSet은 ReplicaSet Controller가 관리하고 pod의 할당은 여전히 scheduler가 관리.

스케일 아웃
ReplicaSet을 이용하면 손쉽게 pod를 여러개로 복제 가능함.
==================echo-rs-scaled.yml============
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: echo-rs
spec:
  replicas: 4
  selector:
    matchLabels:
      app: echo
      tier: app
  template:
    metadata:
      labels:
        app: echo
        tier: app
    spec:
      containers:
        - name: echo
          image: ghcr.io/subicura/echo:v1
==========================================
#실행
kubectl apply -f echo-rs-scaled.yml
# Pod 확인
kubectl get pod,rs
확인을 하면 기존에 생성된 pod외 3개가 추가된것을 볼 수 있음.

마무리
ReplicaSet은 원하는 개수의 pod를 유지하는 역활
label을 이용해 pod를 확인하기 때문에 label이 겹치면 무쓸모
실제로는 ReplicaSet을 단독으로 사용하진 않음.

실습1. 다음 조건을 만족하는 ReplicaSet을 만드시오.
키			값
ReplicaSet이름		nginx
ReplicaSet selector		app:nginx
ReplicaSet 복제수		3
Container 이름		nginx
Container이미지		nginx:latest

정답
=========silsup3.yml===========
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx
spec: 
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
=============================