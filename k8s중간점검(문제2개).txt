중간 점검.

Wep Application Deploy
기존에 배웠던 Pod, ReplicaSet, Deployment, Service를 이용해서 기본적인 웹 어플리케이션을 배포해봄
- 1. 워드프레스 배포 [(중간점검1).PNG파일 참조]
MySQL
키		값
컨테이너 		mysql:5.6
포트 		3306
환경변수		MYSQL_ROOT_PASSWORD: password

Wordpress
키		값
컨테이너 이미지	wordpress:5.5.3-apache
포트		80
환경변수		WORDPRESS_DB_HOST:[wordpress host]
환경변수		WORDPRESS_DB_PASSWORD: password

정답
==============middlecheck1.yml==================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
        - image: mysql:5.6
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
          ports:
            - containerPort: 3306
              name: mysql

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
        - image: wordpress:5.5.3-apache
          name: wordpress
          env:
            - name: WORDPRESS_DB_HOST
              value:  wordpress-mysql
            - name: WORDPRESS_DB_PASSWORD
              value: password
          ports:
            - containerPort: 80
              name: wordpress

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  type: NodePort
  ports:
    - port: 80
      nodePort: 30000
  selector:
    app: wordpress
    tier: frontend
=================================
확인
minikube ip
ip:30000로 들어가서 확인.


-2 조금더 복잡한 형태

